# vim: ts=3:sw=3

# module dependencies[%
@for each o lo obj var=O %][%
   @if generate_lo_diagrams %][%
      @if group %][%
      @else %]
diagramsl0.[%O%]:[% 
         @for elements topolopy.keep.tree %] \
	d[%$_%]h[%helicity%]l0.[%O%][%
         @end @for %][%
         @if internal REQUIRE_FR5 %]
diagramsl0fr5.[%O%]:[%
            @for elements topolopy.keep.tree %] \
	d[%$_%]h[%helicity%]l0fr5.[%O%][%
            @end @for %][%
	 @end @if %][%
      @end @if %][%
   @end @if generate_lo_diagrams %][%
   @if generate_nlo_virt %][%
      @select abbrev.level
      @case helicity %]
abbrevh[%helicity%].[%O%]: globals.[%O%][%
	      @select r2
			@case implicit explicit off %][%
            @for elements topolopy.keep.virt %]
d[%$_%]h[%helicity%]l1.[%O%]: abbrevh[%helicity%].[%O%][%
            @end @for %][%
			@end @select %][%
      @case group %][%
         @for groups var=grp %]
abbrevg[%grp%]h[%helicity%].[%O%]: globals.[%O%][%
	         @select r2
   			@case implicit explicit off %][%
               @for diagrams group=grp%]
d[%$_%]h[%helicity%]l1.[%O%]: abbrevg[%grp%]h[%helicity%].[%O%][%
               @end @for %][%
				@end @select %][%
         @end @for %][%
      @case diagram %][%
         @for elements topolopy.keep.virt %]
abbrevd[%$_%]h[%helicity%].[%O%]: globals.[%O%][%
	         @select r2
   			@case implicit explicit off %]
d[%$_%]h[%helicity%]l1.[%O%]: abbrevd[%$_%]h[%helicity%].[%O%][%
	      	@end @select %][%
         @end @for %][%
      @end @select %][%

	   @select r2
   	@case implicit explicit off %][%
      	@if extension samurai %]
samuraih[%helicity%].[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]h[%helicity%]l1.[%O%][%
	         @end @for %][%
   	   @end @if extension samurai %][%

      	@if extension golem95 %]
golem95h[%helicity%].[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]h[%helicity%]l1.[%O%][%
					@if internal GENERATE_DERIVATIVES
						%] d[%$_%]h[%helicity%]l1d.[%O%][%
					@end @if %][%
         	@end @for %][%
	      @end @if extension golem95 %][%

      	@if extension ninja %]
ninjah[%helicity%].[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]h[%helicity%]l1.[%O%] d[%$_%]h[%helicity%]l131.[%O%] d[%$_%]h[%helicity%]l132.[%O%] d[%$_%]h[%helicity%]l121.[%O%][%
		@end @for %][%
	@end @if extension ninja %][%
	@end @select %][%
   @end @if generate_nlo_virt%][%
	@if generate_uv_counterterms %]
diagramsct.[%O%]:[%
     	@for elements topolopy.keep.ct %] \
	d[%$_%]h[%helicity%]l1c.[%O%][%
		@end @for %][%
	@end @if generate_uv_counterterms %]
amplitudeh[%helicity%].[%O%]: globals.[%O%][%
	   @select r2
		@case implicit explicit off %][%
	      @if extension samurai %] samuraih[%helicity%].[%O%][%
   	   @end @if %][%
	      @if extension golem95 %] golem95h[%helicity%].[%O%][%
   	   @end @if %][%
	      @if extension ninja %] ninjah[%helicity%].[%O%][%
   	   @end @if %][%
		@end @select %][%
	   @if generate_lo_diagrams %] \
			diagramsl0.[%O%][%
		   @if internal REQUIRE_FR5 %] diagramsl0fr5.[%O%][%
			@end @if %][%
		@end @if %][%
		@if generate_nlo_virt %][%
         @select abbrev.level
         @case helicity %] \
			abbrevh[%helicity%].[%O%][%
         @case group %][%
            @for groups var=grp %] \
			abbrevg[%grp%]h[%helicity%].[%O%][%
            @end @for %][%
         @case diagram %][%
            @for elements topolopy.keep.virt %] \
			abbrevd[%$_%]h[%helicity%].[%O%][%
            @end @for %][%
         @end @select %][%
      @end @if %][%
			@if generate_uv_counterterms %] \
			diagramsct.[%O%][%
			@end @if %][%
@end @for %]
