[%' vim: syntax=golem
	 This template defines the Makefile.source that go under
    <process_dir>/amplitude*/
'%]# vim: ts=3:sw=3
[% @if internal OLP_MODE %]
include ../../Makefile.conf[%
@else %]
include ../Makefile.conf[%
@end @if %]

# @date: [% time_stamp format=%x~%X %]

FORM_OPT= \
	-D PROCESSPATH=.. \
	-D PWD=. \
	-p ..:../codegen \
	-M -q

[% @if generate_lo_diagrams %]
DIAGRAMS_TREE=[% @for elements topolopy.keep.tree %] \
		d[%$_%]l0.log[%
	@end @for %]

TXT_TREE= $(subst .cc,.log,$(DIAGRAMS_TREE))

SOURCE_TREE= $(DIAGRAMS_TREE)
[% @end @if generate_lo_diagrams %]

REDUZE=[% reduze.bin %]
TRANSLATE_REDUZE=python ../codegen/translate_reduze.py

[% @if generate_nlo_virt %]
DIAGRAMS_1LOOP_VIRT=reduze_1loop \
	translate_1loop [% @for elements topolopy.keep.virt %] \
	d[%$_%]l1.log[% @end @for %] \
	l1.log \
	toreduze_1loop \
	l1.cc

TXT_1LOOP_VIRT= $(subst .cc,.log,$(DIAGRAMS_1LOOP_VIRT))

[% @end @if generate_nlo_virt %]

[% @if generate_nnlo_virt %]
DIAGRAMS_2LOOP_VIRT= reduze_2loop \
	translate_2loop [% @for elements topolopy.keep.nnlo_virt %] \
	d[%$_%]l2.log[% @end @for %] \
	l2.log \
	toreduze_2loop \
	l2.cc

TXT_2LOOP_VIRT= $(subst .cc,.log,$(DIAGRAMS_2LOOP_VIRT))

[% @end @if generate_nnlo_virt %]

SOURCE_VIRT = [% @if generate_nlo_virt %] $(DIAGRAMS_1LOOP_VIRT) [% @end @if generate_nlo_virt %] [% 
@if generate_nnlo_virt %] $(DIAGRAMS_2LOOP_VIRT) [% @end @if generate_nnlo_virt %]

[% @if generate_nlo_virt %]
reduze_1loop:
	cd ../codegen/reduze/1loop; $(REDUZE) reduze_setup.yaml; cd -;
translate_1loop:
	$(TRANSLATE_REDUZE) ../codegen/reduze/1loop/ 1
[% @for elements topolopy.keep.virt %]
d[%$_%]l1.log: ../diagrams-1.hh
	@echo Form is processing loop diagram [%$_%]
	@$(FORM) $(FORM_OPT) \
	    -w$(FORM_THREADS) \
	    -D LOOPS=1 \
	    -D DIAG=[%$_%] \
	    -D OUTFILE=d[%$_%]l1 \
	    ../codegen/golemreduze.frm
[% @end @for %]

l1.log: ../diagrams-1.hh
	@echo Form is summing 1 loop diagrams
	@$(FORM) $(FORM_OPT) \
	    -w$(FORM_THREADS) \
	    -D LOOPS=1 \
	    -D OUTFILE=l1 \
	    ../codegen/golemreduzesum.frm

toreduze_1loop:
	python toreduze.py -i l1integrals.txt -o l1toreduze.txt  # python hack

#prompt user to create codegen/reduzereduction-1.hh file containing reduction

#
# STAGE 2
#
l1.cc: ../diagrams-1.hh
	@echo Form is reducing 1 loop diagrams
	@$(FORM) $(FORM_OPT) \
		-w$(FORM_THREADS) \
		-D LOOPS=1 \
		-D ORD=2 \
		-D OUTFILE=l1 \
		../codegen/golemreduzesecdec.frm

tosecdec_1loop:
	python tosecdec.py -i l2secdec.txt -m secdec-1loop.m -p secdec-1loop.input # python hack
[% @end @if %]

[% @if generate_nnlo_virt %]
reduze_2loop:
	cd ../codegen/reduze/2loop; $(REDUZE) reduze_setup.yaml; cd -;
translate_2loop:
	$(TRANSLATE_REDUZE) ../codegen/reduze/2loop/ 2
[% @for elements topolopy.keep.nnlo_virt %]
d[%$_%]l2.log: ../diagrams-2.hh
	@echo Form is processing loop diagram [%$_%]
	@$(FORM) $(FORM_OPT) \
	    -w$(FORM_THREADS) \
	    -D LOOPS=2 \
	    -D DIAG=[%$_%] \
	    -D OUTFILE=d[%$_%]l2 \
	    ../codegen/golemreduze.frm
[% @end @for %]

l2.log: ../diagrams-2.hh
	@echo Form is summing 2 loop diagrams
	@$(FORM) $(FORM_OPT) \
	    -w$(FORM_THREADS) \
		-D LOOPS=2 \
		-D OUTFILE=l2 \
		../codegen/golemreduzesum.frm

toreduze_2loop:
	python toreduze.py -i l2integrals.txt -o l2toreduze.txt  # python hack

#prompt user to create codegen/reduzereduction-2.hh file containing reduction for all integrals in l2toreduze.txt

#
# STAGE 2
#
l2.cc: ../diagrams-2.hh
	@echo Form is reducing 2 loop diagrams
    @$(FORM) $(FORM_OPT) \
		-w$(FORM_THREADS) \
		-D LOOPS=2 \
		-D ORD=0 \
		-D OUTFILE=l2 \
		../codegen/golemreduzesecdec.frm

tosecdec_2loop:
	python tosecdec.py -i l2secdec.txt -m secdec-2loop.m -p secdec-2loop.input # python hack


[% @end @if %]



.SUFFIXES:

all_source: $(SOURCE_TREE) $(SOURCE_VIRT) 
